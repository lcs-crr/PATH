%implements s1_b0_8wvor_ForcingFunction "C"

%function ForcingFunction(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

NeslSimulationData *simulationData;
NeuDiagnosticManager *diagnosticManager;
NeuDiagnosticTree *diagnosticTree;
XDot *_rtXdot;
char *msg;
real_T tmp_p[16];
real_T time;
int_T tmp_e[5];
int_T is;
uint32_T ri;
boolean_T tmp;
%closefile localVarDecl
_rtXdot = %<(SLibCG_SE(SLibGetContStatesDerivativeStructPtr()))>;
_rtXdot->lxztuzhhop = (rtB.bdmsuutsho - rtX.lxztuzhhop) * 100.0;
_rtXdot->ouycyc0wvn = 0.0;
_rtXdot->ouycyc0wvn += rtP.TransferFcn_A * rtX.ouycyc0wvn;
_rtXdot->ouycyc0wvn += rtB.jqey3hjj2i;
_rtXdot->bq1z1krpn5 = 0.0;
_rtXdot->bq1z1krpn5 += rtP.Pumpresponsedelay_A * rtX.bq1z1krpn5;
_rtXdot->bq1z1krpn5 += rtB.cbztcpotvv;
_rtXdot->iwyoop3u3r = 0.0;
for (ri = rtP.StateSpace_A_jc[0U]; ri < rtP.StateSpace_A_jc[1U]; ri++) {
    _rtXdot->iwyoop3u3r += rtP.StateSpace_A_pr * rtX.iwyoop3u3r;
}
for (ri = rtP.StateSpace_B_jc[0U]; ri < rtP.StateSpace_B_jc[1U]; ri++) {
    _rtXdot->iwyoop3u3r += rtP.StateSpace_B_pr * rtB.cizm5vaana[5];
}
_rtXdot->env1qqkpbr = rtB.gmef4hcfga;
_rtXdot->karozk4fpb = rtB.jdzew5kwiu;
_rtXdot->fr1u0arkx5 = (rtB.ek2xrgvbnw - rtX.fr1u0arkx5) * 1000.0;
simulationData = (NeslSimulationData *)rtDW.pg1peeaap2;
time = %<(SLibCG_SE(LibGetT()))>;
simulationData->mData->mTime.mN = 1;
simulationData->mData->mTime.mX = &time;
simulationData->mData->mContStates.mN = 337;
simulationData->mData->mContStates.mX = &rtX.effbkgmtax[0];
simulationData->mData->mDiscStates.mN = 0;
simulationData->mData->mDiscStates.mX = &rtDW.pahluld41k;
simulationData->mData->mModeVector.mN = 246;
simulationData->mData->mModeVector.mX = &rtDW.idk0zphtpp[0];
tmp = %<(SLibCG_SE(SLibCGIRGetSolverFoundZcEvents()))>;
simulationData->mData->mFoundZcEvents = tmp;
simulationData->mData->mIsMajorTimeStep = %<(SLibCG_SE(LibIsMajorTimeStep()))>;
tmp = %<(SLibCG_SE(SLibCGIRGetSolverAssertCheck()))>;
simulationData->mData->mIsSolverAssertCheck = tmp;
tmp = %<(SLibCG_SE(RTMIsSolverCheckingCIC()))>;
simulationData->mData->mIsSolverCheckingCIC = tmp;
tmp = %<(SLibCG_SE(RTMIsSolverComputingJacobian()))>;
simulationData->mData->mIsComputingJacobian = tmp;
simulationData->mData->mIsEvaluatingF0 = (%<(SLibCG_SE(RTMGetEvaluatingF0ForJacobian()))> != 0);
tmp = %<(SLibCG_SE(RTMIsSolverRequestingReset()))>;
simulationData->mData->mIsSolverRequestingReset = tmp;
simulationData->mData->mIsModeUpdateTimeStep = %<(SLibCG_SE(RTMGetIsModeUpdateTimeStep()))>;
tmp_e[0] = 0;
tmp_p[0] = rtB.g4x5d1kqrr[0];
tmp_p[1] = rtB.g4x5d1kqrr[1];
tmp_p[2] = rtB.g4x5d1kqrr[2];
tmp_p[3] = rtB.g4x5d1kqrr[3];
tmp_e[1] = 4;
tmp_p[4] = rtB.hmdfvofm2d[0];
tmp_p[5] = rtB.hmdfvofm2d[1];
tmp_p[6] = rtB.hmdfvofm2d[2];
tmp_p[7] = rtB.hmdfvofm2d[3];
tmp_e[2] = 8;
tmp_p[8] = rtB.c4vppbzui3[0];
tmp_p[9] = rtB.c4vppbzui3[1];
tmp_p[10] = rtB.c4vppbzui3[2];
tmp_p[11] = rtB.c4vppbzui3[3];
tmp_e[3] = 12;
tmp_p[12] = rtB.apvg0yhoqc[0];
tmp_p[13] = rtB.apvg0yhoqc[1];
tmp_p[14] = rtB.apvg0yhoqc[2];
tmp_p[15] = rtB.apvg0yhoqc[3];
tmp_e[4] = 16;
simulationData->mData->mInputValues.mN = 16;
simulationData->mData->mInputValues.mX = &tmp_p[0];
simulationData->mData->mInputOffsets.mN = 5;
simulationData->mData->mInputOffsets.mX = &tmp_e[0];
simulationData->mData->mDx.mN = 337;
simulationData->mData->mDx.mX = &_rtXdot->effbkgmtax[0];
diagnosticManager = (NeuDiagnosticManager *)rtDW.bglls0p5vn;
diagnosticTree = neu_diagnostic_manager_get_initial_tree(diagnosticManager);
is = ne_simulator_method((NeslSimulator *)rtDW.b1a0qim2yg, NESL_SIM_FORCINGFUNCTION, simulationData, diagnosticManager);
if (is != 0) {
    tmp = error_buffer_is_empty(%<(LibGetRTModelErrorStatus())>);
    if (tmp) {
        msg = rtw_diagnostics_msg(diagnosticTree);
        %<(LibSetRTModelErrorStatus("msg"))>;
    }
}
_rtXdot->c3couylb2m = rtB.kbmslsujc1;
_rtXdot->htdwsrhaak = 0.0;
_rtXdot->htdwsrhaak += rtP.TransferFcn1_A * rtX.htdwsrhaak;
_rtXdot->htdwsrhaak += rtB.d0xrdda4sw;
_rtXdot->eke3qdk5z1 = 0.0;
_rtXdot->eke3qdk5z1 += rtP.TransferFcn2_A * rtX.eke3qdk5z1;
_rtXdot->eke3qdk5z1 += rtB.bsmqgkaq5o;
_rtXdot->hf2e344jvt = 0.0;
_rtXdot->hf2e344jvt += rtP.TransferFcn3_A * rtX.hf2e344jvt;
_rtXdot->hf2e344jvt += rtB.fb2cx2pt5m;
_rtXdot->nl02p1ttxc = 0.0;
_rtXdot->nl02p1ttxc += rtP.TransferFcn4_A * rtX.nl02p1ttxc;
_rtXdot->nl02p1ttxc += rtB.f2sqecizzq;
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedForcingFunctionLocalVars", localVarDecl)>
%endfunction
%function ForcingFunctionFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ForcingFunction(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 6, fcnProtoType)>
%endfunction
